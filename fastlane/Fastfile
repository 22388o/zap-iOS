# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

default_platform(:ios)

app_identifier = ["com.jackmallers.zap", "com.jackmallers.zap.messages"]

desc "Update build number."
lane :build_number do
  new_build_number = Time.now.strftime("%Y.%m.%d.%H.%M")
  increment_build_number(build_number: new_build_number)
end

desc "Update app version."
lane :change_version do |options|
  if version = options[:version] 
    increment_version_number(version_number: version)
  else 
    version = prompt(text: "Please enter the version number: ")
  end
  increment_version_number(version_number: version)
end

desc "Builds new Beta Build and uploads it to S3."
lane :s3_beta do
  unless ENV.key?('ZAP_BETA_S3_ACCESS_KEY')
    UI.user_error!("ZAP_BETA_S3_ACCESS_KEY not set.")
  end

  ensure_git_status_clean
  build_number

  sync_code_signing(
    username: "ottosuess@protonmail.com",
    app_identifier: app_identifier,
    type: "adhoc",
    force_for_new_devices: true
  )

  build_ios_app(
    workspace: "Zap.xcworkspace",
    configuration: "Debug",
    scheme: "Zap",
    output_directory: "./builds/beta",
    export_method: "ad-hoc"
  )
  aws_s3(
    access_key: ENV['ZAP_BETA_S3_ACCESS_KEY'],
    secret_access_key: ENV['ZAP_BETA_S3_SECRET_ACCESS_KEY'],
    bucket: ENV['ZAP_BETA_S3_BUCKET'],
    region: ENV['ZAP_BETA_S3_REGION'],
    ipa: './builds/beta/Zap.ipa',
    app_directory: 'ios-beta',
    upload_metadata: true
  )

  changelog = changelog_from_git_commits(tag_match_pattern: 'builds/s3_beta/*', pretty: '- %s', merge_commit_filtering: "exclude_merges")

  add_git_tag
  push_git_tags

  slack(
    message: "Just uploaded a new iOS beta: " + ENV['ZAP_BETA_S3_URL'] + "\n" + changelog.to_s,
    use_webhook_configured_username_and_icon: true,
    default_payloads: []
  )

  sh("git reset --hard")
end

lane :beta do
  ensure_git_status_clean

  increment_build_number(build_number: latest_testflight_build_number(initial_build_number: 0) + 1)

  sync_code_signing(
    username: "ottosuess@protonmail.com",
    app_identifier: app_identifier,
    type: "appstore"
  )

  build_ios_app(
    workspace: "Zap.xcworkspace",
    scheme: "Zap",
    output_directory: "./builds/beta",
    export_method: "app-store"
  )

  changelog = changelog_from_git_commits(tag_match_pattern: 'builds/beta/*', pretty: '- %s', merge_commit_filtering: "exclude_merges")

  upload_to_testflight(
    username: "ottosuess@protonmail.com"
  )

  add_git_tag
  push_git_tags

  slack_message = "Just uploaded a new iOS beta to Testflight\n" + changelog.to_s
  slack(
    message: slack_message,
    use_webhook_configured_username_and_icon: true,
    default_payloads: []
  )

  sh("git reset --hard")
end

desc "Add a new UDID to developer portal and update adhoc provisioning profile."
lane :udid do
  device_name = prompt(text: "Device name: ")
  udid = prompt(text: "UDID: ")
  
  register_device(
    name: device_name,
    udid: udid
  )
end

desc "Generate new app icon assets."
lane :update_app_icon do
  appicon(
    appicon_image_file: 'logo.png',
    appicon_path: 'Zap/Assets.xcassets',
    appicon_devices: [:iphone, :ios_marketing]
  )
end

desc "Run all tests."
lane :tests do
  run_tests(
    workspace: "Zap.xcworkspace",
    devices: ["iPhone 8"],
    scheme: "Zap"
  )
end
